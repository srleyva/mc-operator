apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: mc-operator-api-cloud-armor
spec:
  securityPolicy:
    name: mc-control-plane
---
apiVersion: v1
kind: Service
metadata:
  name: minecraft-control-plane
  annotations:
    beta.cloud.google.com/backend-config: '{"ports": {"web-server":"mc-operator-api-cloud-armor"}}'
spec:
  selector:
    control-plane: controller-manager
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: "web-server"
---
apiVersion: v1
kind: Service
metadata:
  name: minecraft-control-plane-inner
spec:
  selector:
    control-plane: controller-manager
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: "web-server"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsUser: 65532
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        ports:
        - name: "web-server"
          containerPort: 3000
        imagePullPolicy: Always
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
